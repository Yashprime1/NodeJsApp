step "checkout-and-deploy" {
    name = "Checkout and Deploy"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                #!/bin/bash
                printenv
                app_id=$(get_octopusvariable "PLATFORM_BOT_APP_ID") # App ID as first argument
                echo "-----BEGIN RSA PRIVATE KEY-----" > private_key.pem
                
                export AWS_ACCESS_KEY_ID=$(get_octopusvariable "AWS_ACCESS_KEY_ID")
                export AWS_SECRET_ACCESS_KEY=$(get_octopusvariable "AWS_SECRET_ACCESS_KEY")
                export AWS_DEFAULT_REGION=ap-south-1
                for word in $(get_octopusvariable "PLATFORM_BOT_PRIVATE_KEY_SECRET") ; do  echo $word >> private_key.pem; done
                echo "-----END RSA PRIVATE KEY-----" >> private_key.pem # file path of the private key as second argument
                pem=$(cat private_key.pem)
                now=$(date +%s)
                iat=$((${now} - 60)) # Issues 60 seconds in the past
                exp=$((${now} + 600)) # Expires 10 minutes in the future
                b64enc() { openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '
                '; }
                header_json='{
                    "typ":"JWT",
                    "alg":"RS256"
                }'
                # Header encode
                header=$( echo -n "${header_json}" | b64enc )
                payload_json='{
                    "iat":'"${iat}"',
                    "exp":'"${exp}"',
                    "iss":'"${app_id}"'
                }'
                # Payload encode
                payload=$( echo -n "${payload_json}" | b64enc )
                # Signature
                header_payload="${header}"."${payload}"
                signature=$(openssl dgst -sha256 -sign <(echo -n "${pem}") <(echo -n "${header_payload}") | b64enc)
                # Create JWT
                JWT="${header_payload}"."${signature}"
                printf '%s
                ' "JWT: $JWT"
                gitHubTokenSecret=$(curl -X POST -H "Authorization: Bearer ${JWT}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/app/installations/$(get_octopusvariable "PLATFORM_BOT_INSTALLATION_ID")/access_tokens)
                token=$(echo $gitHubTokenSecret | jq -r '.token')
                git clone https://x-access-token:$token@github.com/Yashprime1/genzinfra-cloudformation.git
                cd genzinfra-cloudformation
                pip3 install cfstack tabulate
                python3 execute.py 
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "hosted-ubuntu"
    }
}